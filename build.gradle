buildscript {
    ext.kotlin_version = '1.2.70'
    repositories {
        mavenCentral()
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

group 'com.github.pashc'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

if (project.hasProperty('release')) {

    nexusStaging {
        username = ossrhUser
        password = ossrhPassword
    }

    subprojects {

        task javadocJar(type: Jar) {
            classifier = 'javadoc'
            from javadoc
        }

        task sourcesJar(type: Jar) {
            classifier = 'sources'
            from sourceSets.main.allSource
        }

        artifacts {
            archives javadocJar, sourcesJar
        }
    }

    allprojects {
        apply plugin: 'signing'
        apply plugin: 'maven'

        signing {
            sign configurations.archives
        }

        uploadArchives {
            repositories {
                mavenDeployer {
                    beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                    repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                        authentication(userName: ossrhUser, password: ossrhPassword)
                    }
                    pom.project {
                        name 'ktlint-ruleset'
                        description 'custom ruleset for ktlint'
                        packaging 'jar'
                        url 'https://github.com/pashc/ktlint-ruleset'

                        scm {
                            connection 'scm:git:https://github.com/pashc/ktlint-ruleset.git'
                            developerConnection 'scm:git:git@github.com:pashc/ktlint-ruleset.git'
                            url 'https://github.com/pashc/ktlint-ruleset.git'
                        }

                        licenses {
                            license {
                                name 'The MIT License (MIT)'
                                url 'http://opensource.org/licenses/MIT'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id = 'pashc'
                                name = 'Paul Werner'
                                email = 'contact@paulwerner.org'
                            }
                        }
                    }
                }
            }
        }
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

configurations {
    ktlint
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    provided 'com.github.shyiko.ktlint:ktlint-core:0.28.0'

    testCompile 'org.assertj:assertj-core:3.11.1'
    testCompile 'com.github.shyiko.ktlint:ktlint-test:0.28.0'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-reflect'
    }

    ktlint 'com.github.shyiko:ktlint:0.28.0'
}


task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "--color", "--reporter=plain?group_by_file", "src/**/*.kt"
}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

install {
    repositories.mavenInstaller {
        pom.project {
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }
}
